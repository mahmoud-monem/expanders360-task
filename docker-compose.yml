services:
  postgres:
    container_name: app-postgres
    image: kartoza/postgis:15-3.3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: expanders360
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - expanders360-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: expanders360-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: expanders360
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - expanders360-network

  # Redis (for Bull queues and caching)
  redis:
    image: redis:7.2-alpine
    container_name: expanders360-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - expanders360-network

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expanders360-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: expanders_user
      DB_PASSWORD: expanders_password
      DB_NAME: expanders360
      MONGO_URI: mongodb://admin:admin_password@mongodb:27017/expanders360?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET_NAME: research-documents
      S3_REGION: us-east-1
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - mongodb
      - redis
      - minio
    volumes:
      - ./logs:/app/logs
    networks:
      - expanders360-network

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: expanders360-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin_password
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin_password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - expanders360-network

  # S3 compatible storage service
  minio:
    image: minio/minio:latest
    container_name: expanders360-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - expanders360-network

  # MinIO initialization service
  minio-init:
    image: minio/mc:latest
    container_name: expanders360-minio-init
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./docker/minio/init.sh:/init.sh
    entrypoint: >
      /bin/sh -c "
      chmod +x /init.sh &&
      /init.sh
      "
    networks:
      - expanders360-network
volumes:
  mongodb_data:
  redis_data:
  postgres_data:
  minio_data:

networks:
  expanders360-network:
    driver: bridge